#!/usr/bin/env node

'use strict';
var fs      = require('fs-extra'),
	path    = require('path'),
	colors  = require('colors'),
	yargs   = require('yargs'),

	aliases = [ '-a', '--add',  '-d', '--delete', '-v', '--verbose', '-c', '--copy' ],

	argv = yargs
		.usage('\nUsage: ' + process.argv[1].split('/').pop() + ' [options]')
		.alias('a', 'add')
		.describe('a', 'add data path to memory file, usually if memory file is not found - it will create one for you.')
		.alias('d', 'delete')
		.describe('d', 'clear the memory file')
		.alias('c', 'copy')
		.describe('c', 'copy files into specific path')
		.alias('v', 'verbose')
		.describe('v', 'print debugging message')
		.boolean('h')
		.alias('h', 'help')
		.describe('h', 'Help ')
		.argv,

	files = [],


setValidDir = function ( dir ) {

	try {
		process.chdir( dir );
	}
	catch (err) {
		dir = process.cwd();
	}

	return dir;
},

createMemory = function ( dir ) {

	dir = setValidDir( dir );
	fs.writeFile(dir + '/memory', '', function(err) {
		if(err) {
			return console.log(err);
		}

		console.log("Memory File was created!");
	});
},

addToMemory = function ( path ) {

	if (!fs.existsSync(path)) {
		console.log( 'Path not found or undefined' );
		console.log(yargs.help());
	} else {

		if (!fs.existsSync('memory')) {
			console.log( '+++++++++++++++++++++++++' );
			console.log( '| Creating Memory file! |' );
			console.log( '+++++++++++++++++++++++++' );
			console.log( '' );
			createMemory( process.cwd() );
		}

		fs.appendFile('memory', path + '\n', function(err) {
			if(err) {
				return console.log(err);
			}

			console.log("Added: " + path);
		});
	}
},

initMemory = function () {
	console.log( '++++++++++++++++++++++++++' );
	console.log( '| Clear the Memory file! |' );
	console.log( '++++++++++++++++++++++++++' );

	if (fs.existsSync('memory')) {
		fs.unlinkSync('memory');
	}

	fs.writeFile('memory', '', function(err) {
		if(err) {
			return console.log(err);
		}
	});

},

getFilesinMemory = function (pathToSave) {
	fs.readFile("memory", "utf8", function (error, data) {
		if(error) throw error;
		var loc = 0;
		var filePath = data.toString().split("\n");


		for(loc in filePath) {
			if( filePath[ loc ].length > 0 ) {
				fs.copy(filePath[ loc ], pathToSave + '/' + filePath[ loc ], function (err) {
					if (err) {
						console.error(err);
					} else {
						console.log("Successfully copied to " + pathToSave + '/' + filePath[ loc ]);
					}
				} );
			}
		}

	});
};

var pArgv = process.argv.slice(2)[0];

if (argv.h || aliases.indexOf(pArgv) < 0 ) {
	console.log(yargs.help());
	return;
}

if (argv.d) {
	initMemory();
}

if (argv.a) {
	addToMemory(argv.a);
}

if (argv.p) {
	getFilesinMemory(argv.p);
}
